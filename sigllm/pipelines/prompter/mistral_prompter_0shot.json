{
    "primitives": [
        "mlstars.custom.timeseries_preprocessing.time_segments_aggregate",
        "sklearn.impute.SimpleImputer",
        "sigllm.primitives.transformation.Float2Scalar",
        "sigllm.primitives.prompting.timeseries_preprocessing.rolling_window_sequences",
	    "sigllm.primitives.transformation.format_as_string",
        
        "sigllm.primitives.prompting.huggingface.HF",
        "sigllm.primitives.transformation.parse_anomaly_response",
        "sigllm.primitives.transformation.format_as_integer",
        "sigllm.primitives.prompting.anomalies.val2idx",
        "sigllm.primitives.prompting.anomalies.find_anomalies_in_windows",
        "sigllm.primitives.prompting.anomalies.merge_anomalous_sequences",
        "sigllm.primitives.prompting.anomalies.format_anomalies"
    ],
    "init_params": {
        "mlstars.custom.timeseries_preprocessing.time_segments_aggregate#1": {
            "time_column": "timestamp",
            "interval": 21600,
            "method": "mean"
        },
        "sigllm.primitives.transformation.Float2Scalar#1": {
            "decimal": 2,
            "rescale": true
        },
        "sigllm.primitives.prompting.timeseries_preprocessing.rolling_window_sequences#1": {
            "window_size": 100,
            "step_size": 40
        },
        "sigllm.primitives.transformation.format_as_string#1": {
            "space": false
        },
        "sigllm.primitives.prompting.huggingface.HF#1": {
            "name": "mistralai/Mistral-7B-Instruct-v0.2",
            "samples": 1,
            "temp": 0.01
        },
        "sigllm.primitives.prompting.anomalies.find_anomalies_in_windows#1": {
            "alpha": 0.4
        },
        "sigllm.primitives.prompting.anomalies.merge_anomalous_sequences#1": {
            "beta": 0.5
        }
    },
    "input_names": {
        "sigllm.primitives.prompting.huggingface.HF#1": {
            "X": "X_str"
        },
        "sigllm.primitives.transformation.parse_anomaly_response#1": {
            "X": "y_hat"
        },
        "sigllm.primitives.transformation.format_as_integer#1": {
            "X": "y_parsed"
        }
    },
    "output_names": {
        "mlstars.custom.timeseries_preprocessing.time_segments_aggregate#1": {
            "index": "timestamp"
        },
        "sigllm.primitives.transformation.format_as_string#1": {
            "X": "X_str"
        },
        "sigllm.primitives.prompting.huggingface.HF#1": {
            "y": "y_hat"
        },
        "sigllm.primitives.transformation.parse_anomaly_response#1": {
            "X": "y_parsed"
        },
        "sigllm.primitives.transformation.format_as_integer#1": {
            "X": "y"
        }
    }
}